{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Programowanie - wieksze projekty\\\\Angular\\\\Be-Healthy\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet PaypalPaymentsComponent = class PaypalPaymentsComponent {\n  constructor() {\n    this.product = {\n      price: 777.77,\n      description: 'pakiet podstawowy',\n      img: '../../assets/img/main-bg.jpg'\n    };\n    this.paidFor = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    paypal.Buttons({\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            description: this.product.description,\n            amount: {\n              currency_code: 'USD',\n              value: this.product.price\n            }\n          }]\n        });\n      },\n      onApprove: function () {\n        var _ref = _asyncToGenerator(function* (data, actions) {\n          const order = yield actions.order.capture();\n          _this.paidFor = true;\n          console.log(order);\n        });\n\n        return function onApprove(_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      onError: err => {\n        console.log(err);\n      }\n    }).render(this.paypalElement.nativeElement);\n  }\n\n};\n\n__decorate([ViewChild('paypal', {\n  static: true\n})], PaypalPaymentsComponent.prototype, \"paypalElement\", void 0);\n\nPaypalPaymentsComponent = __decorate([Component({\n  selector: 'app-paypal-payments',\n  templateUrl: './paypal-payments.component.html',\n  styleUrls: ['./paypal-payments.component.css']\n})], PaypalPaymentsComponent);\nexport { PaypalPaymentsComponent }; // public payPalConfig?: IPayPalConfig;\n// ngOnInit(): void {\n//   this.initConfig();\n// }\n// private initConfig(): void {\n//   this.payPalConfig = {\n//   currency: 'EUR',\n//   clientId: 'Aec6houwiHGVkVyUGmHMvSoGHwYaAbnk3bTux9cR54M4dNb5FGmxGA8G',\n//   createOrderOnClient: (data) => <ICreateOrderRequest>{\n//     intent: 'CAPTURE',\n//     purchase_units: [\n//       {\n//         amount: {\n//           currency_code: 'EUR',\n//           value: '9.99',\n//           breakdown: {\n//             item_total: {\n//               currency_code: 'EUR',\n//               value: '9.99'\n//             }\n//           }\n//         },\n//         items: [\n//           {\n//             name: 'Enterprise Subscription',\n//             quantity: '1',\n//             category: 'DIGITAL_GOODS',\n//             unit_amount: {\n//               currency_code: 'EUR',\n//               value: '9.99',\n//             },\n//           }\n//         ]\n//       }\n//     ]\n//   },\n//   advanced: {\n//     commit: 'true'\n//   },\n//   style: {\n//     label: 'paypal',\n//     layout: 'vertical'\n//   },\n//   onApprove: (data, actions) => {\n//     console.log('onApprove - transaction was approved, but not authorized', data, actions);\n//     actions.order.get().then(details => {\n//       console.log('onApprove - you can get full order details inside onApprove: ', details);\n//     });\n//   },\n//   onClientAuthorization: (data) => {\n//     console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\n//     //this.showSuccess = true;\n//   },\n//   onCancel: (data, actions) => {\n//     console.log('OnCancel', data, actions);\n//   },\n//   onError: err => {\n//     console.log('OnError', err);\n//   },\n//   onClick: (data, actions) => {\n//     console.log('onClick', data, actions);\n//   },\n// };\n// }\n// }","map":{"version":3,"sources":["D:/Programowanie - wieksze projekty/Angular/Be-Healthy/src/app/paypal-payments/paypal-payments.component.ts"],"names":["__decorate","Component","ViewChild","PaypalPaymentsComponent","constructor","product","price","description","img","paidFor","ngOnInit","paypal","Buttons","createOrder","data","actions","order","create","purchase_units","amount","currency_code","value","onApprove","capture","console","log","onError","err","render","paypalElement","nativeElement","static","prototype","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,eAArC;AACA,IAAIC,uBAAuB,GAAG,MAAMA,uBAAN,CAA8B;AACxDC,EAAAA,WAAW,GAAG;AACV,SAAKC,OAAL,GAAe;AACXC,MAAAA,KAAK,EAAE,MADI;AAEXC,MAAAA,WAAW,EAAE,mBAFF;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAf;AAKA,SAAKC,OAAL,GAAe,KAAf;AACH;;AACDC,EAAAA,QAAQ,GAAG;AAAA;;AACPC,IAAAA,MAAM,CACDC,OADL,CACa;AACTC,MAAAA,WAAW,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC5B,eAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AACxBC,UAAAA,cAAc,EAAE,CAAC;AACTX,YAAAA,WAAW,EAAE,KAAKF,OAAL,CAAaE,WADjB;AAETY,YAAAA,MAAM,EAAE;AACJC,cAAAA,aAAa,EAAE,KADX;AAEJC,cAAAA,KAAK,EAAE,KAAKhB,OAAL,CAAaC;AAFhB;AAFC,WAAD;AADQ,SAArB,CAAP;AAUH,OAZQ;AAaTgB,MAAAA,SAAS;AAAA,qCAAE,WAAOR,IAAP,EAAaC,OAAb,EAAyB;AAChC,gBAAMC,KAAK,SAASD,OAAO,CAACC,KAAR,CAAcO,OAAd,EAApB;AACA,UAAA,KAAI,CAACd,OAAL,GAAe,IAAf;AACAe,UAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACH,SAJQ;;AAAA;AAAA;AAAA;AAAA,SAbA;AAkBTU,MAAAA,OAAO,EAAEC,GAAG,IAAI;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH;AApBQ,KADb,EAuBKC,MAvBL,CAuBY,KAAKC,aAAL,CAAmBC,aAvB/B;AAwBH;;AAlCuD,CAA5D;;AAoCA9B,UAAU,CAAC,CACPE,SAAS,CAAC,QAAD,EAAW;AAAE6B,EAAAA,MAAM,EAAE;AAAV,CAAX,CADF,CAAD,EAEP5B,uBAAuB,CAAC6B,SAFjB,EAE4B,eAF5B,EAE6C,KAAK,CAFlD,CAAV;;AAGA7B,uBAAuB,GAAGH,UAAU,CAAC,CACjCC,SAAS,CAAC;AACNgC,EAAAA,QAAQ,EAAE,qBADJ;AAENC,EAAAA,WAAW,EAAE,kCAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,iCAAD;AAHL,CAAD,CADwB,CAAD,EAMjChC,uBANiC,CAApC;AAOA,SAASA,uBAAT,G,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component, ViewChild } from '@angular/core';\r\nlet PaypalPaymentsComponent = class PaypalPaymentsComponent {\r\n    constructor() {\r\n        this.product = {\r\n            price: 777.77,\r\n            description: 'pakiet podstawowy',\r\n            img: '../../assets/img/main-bg.jpg'\r\n        };\r\n        this.paidFor = false;\r\n    }\r\n    ngOnInit() {\r\n        paypal\r\n            .Buttons({\r\n            createOrder: (data, actions) => {\r\n                return actions.order.create({\r\n                    purchase_units: [{\r\n                            description: this.product.description,\r\n                            amount: {\r\n                                currency_code: 'USD',\r\n                                value: this.product.price\r\n                            }\r\n                        }\r\n                    ]\r\n                });\r\n            },\r\n            onApprove: async (data, actions) => {\r\n                const order = await actions.order.capture();\r\n                this.paidFor = true;\r\n                console.log(order);\r\n            },\r\n            onError: err => {\r\n                console.log(err);\r\n            }\r\n        })\r\n            .render(this.paypalElement.nativeElement);\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('paypal', { static: true })\r\n], PaypalPaymentsComponent.prototype, \"paypalElement\", void 0);\r\nPaypalPaymentsComponent = __decorate([\r\n    Component({\r\n        selector: 'app-paypal-payments',\r\n        templateUrl: './paypal-payments.component.html',\r\n        styleUrls: ['./paypal-payments.component.css']\r\n    })\r\n], PaypalPaymentsComponent);\r\nexport { PaypalPaymentsComponent };\r\n// public payPalConfig?: IPayPalConfig;\r\n// ngOnInit(): void {\r\n//   this.initConfig();\r\n// }\r\n// private initConfig(): void {\r\n//   this.payPalConfig = {\r\n//   currency: 'EUR',\r\n//   clientId: 'Aec6houwiHGVkVyUGmHMvSoGHwYaAbnk3bTux9cR54M4dNb5FGmxGA8G',\r\n//   createOrderOnClient: (data) => <ICreateOrderRequest>{\r\n//     intent: 'CAPTURE',\r\n//     purchase_units: [\r\n//       {\r\n//         amount: {\r\n//           currency_code: 'EUR',\r\n//           value: '9.99',\r\n//           breakdown: {\r\n//             item_total: {\r\n//               currency_code: 'EUR',\r\n//               value: '9.99'\r\n//             }\r\n//           }\r\n//         },\r\n//         items: [\r\n//           {\r\n//             name: 'Enterprise Subscription',\r\n//             quantity: '1',\r\n//             category: 'DIGITAL_GOODS',\r\n//             unit_amount: {\r\n//               currency_code: 'EUR',\r\n//               value: '9.99',\r\n//             },\r\n//           }\r\n//         ]\r\n//       }\r\n//     ]\r\n//   },\r\n//   advanced: {\r\n//     commit: 'true'\r\n//   },\r\n//   style: {\r\n//     label: 'paypal',\r\n//     layout: 'vertical'\r\n//   },\r\n//   onApprove: (data, actions) => {\r\n//     console.log('onApprove - transaction was approved, but not authorized', data, actions);\r\n//     actions.order.get().then(details => {\r\n//       console.log('onApprove - you can get full order details inside onApprove: ', details);\r\n//     });\r\n//   },\r\n//   onClientAuthorization: (data) => {\r\n//     console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\r\n//     //this.showSuccess = true;\r\n//   },\r\n//   onCancel: (data, actions) => {\r\n//     console.log('OnCancel', data, actions);\r\n//   },\r\n//   onError: err => {\r\n//     console.log('OnError', err);\r\n//   },\r\n//   onClick: (data, actions) => {\r\n//     console.log('onClick', data, actions);\r\n//   },\r\n// };\r\n// }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}